{"version":3,"sources":["webpack:///./src/locale/messages.br.xlf","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6yH;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAuD;AAEvD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,+BAA+B;KACxD;IACD;QACE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE;KAC3B;CACF,CAAC;AAEF;IAAA;IAIgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGChBjC,8lBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAkD;AAGlD;IAOE;IAAgB,CAAC;IAEjB,+BAAQ,GAAR;IACA,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD;AAAA;AAAA,wDAAwD;AAExD;IAAA;IAcyB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3B1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;ACf2C;AAIrD;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAID,kEAAkE;AAClE,IAAM,YAAY,GAAG,mBAAO,CAAC,4GAAqC,CAAC,CAAC;AAEpE,2EAAwB,uBAAgB,CAAC,8EAAW;IAClD,kBAAkB,EAAE,wEAA0B,CAAC,KAAK;IACpD,SAAS,EAAE;QACT,EAAE,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,YAAY,EAAE;QACjD,EAAE,OAAO,EAAE,iEAAmB,EAAE,QAAQ,EAAE,KAAK,EAAE;KAClD;CACF,CAAC,CAAC;AAEH,sDAAsD;AACtD,uCAAuC","file":"main.js","sourcesContent":["module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<xliff version=\\\"1.2\\\" xmlns=\\\"urn:oasis:names:tc:xliff:document:1.2\\\">\\n  <file source-language=\\\"en\\\" datatype=\\\"plaintext\\\" original=\\\"ng2.template\\\">\\n    <body>\\n    <trans-unit id=\\\"titleLabel\\\" datatype=\\\"html\\\">\\n        <source>Title</source>\\n        <target>Título</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">3</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"titlePlaceholder\\\" datatype=\\\"html\\\">\\n        <source>Music title</source>\\n        <target>Título da música</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">4</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"lyricsLabel\\\" datatype=\\\"html\\\">\\n        <source>Lyrics</source>\\n        <target>Letra da música</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">3</context>\\n        </context-group>\\n      </trans-unit>\\n       <trans-unit id=\\\"lyricsPlaceholder\\\" datatype=\\\"html\\\">\\n        <source>Write a complete lyrics of the song</source>\\n        <target>Escreva a letra completa da música</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">8</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"lyricsSlideHint\\\" datatype=\\\"html\\\">\\n        <source>A stanza is a slide</source>\\n        <target>Uma estrofe será um slide</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">12</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"dropLogoFirstInfo\\\" datatype=\\\"html\\\">\\n        <source>Drop your logo here to place on each slide</source>\\n        <target>Arraste e solte aqui sua logotipo para colocar em cada slide</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">20</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"dropLogoSecondInfo\\\" datatype=\\\"html\\\">\\n        <source>or click to choose a photo</source>\\n        <target>ou clique para escolher uma foto</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">21</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"lyricsUppercaseCheckbox\\\" datatype=\\\"html\\\">\\n        <source>All Text to Uppercase</source>\\n        <target>Todo o texto em Caixa Alta</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">29</context>\\n        </context-group>\\n      </trans-unit>\\n      <trans-unit id=\\\"lyricsGenerateButton\\\" datatype=\\\"html\\\">\\n        <source>Generate Slides</source>\\n        <target>Gerar os Slides</target>\\n        <context-group purpose=\\\"location\\\">\\n          <context context-type=\\\"sourcefile\\\">app/home/home.component.html</context>\\n          <context context-type=\\\"linenumber\\\">35</context>\\n        </context-group>\\n      </trans-unit>\\n    </body>\\n  </file>\\n</xliff>\\n\"","var map = {\n\t\"./home/home.module.ngfactory\": [\n\t\t\"./src/app/home/home.module.ngfactory.js\",\n\t\t\"home-home-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '', loadChildren: './home/home.module#HomeModule'\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'plop-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n// import { registerLocaleData } from '@angular/common';\n// import localeBr from '@angular/common/locales/br';\n// import localeBrExtra from '@angular/common/locales/extra/br';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SettingsService } from './core/settings/settings.service';\n\n// registerLocaleData(localeBr, 'pt-BR', localeBrExtra);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    { provide: LOCALE_ID, useValue: 'br' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, TRANSLATIONS, TRANSLATIONS_FORMAT, MissingTranslationStrategy } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// use the require method provided by webpack\ndeclare const require;\n// we use the webpack raw-loader to return the content as a string\nconst translations = require(`raw-loader!./locale/messages.br.xlf`);\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  missingTranslation: MissingTranslationStrategy.Error,\n  providers: [\n    { provide: TRANSLATIONS, useValue: translations },\n    { provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }\n  ]\n});\n\n// platformBrowserDynamic().bootstrapModule(AppModule)\n//   .catch(err => console.error(err));\n"],"sourceRoot":""}